<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <!--配置整合mybatis过程
     1.配置数据库相关参数,可以在spring-context中配置扫描所有properties文件-->
    <context:property-placeholder location = "classpath:jdbc.properties"/>
    <!--2.数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池属性-->
        <property name="driverClass" value="${jdbc_driver}" />

        <!-- 基本属性 url、user、password -->
        <property name="jdbcUrl" value="${jdbc_url}" />
        <property name="user" value="${jdbc_username}" />
        <property name="password" value="${jdbc_password}" />

        <!--c3p0私有属性-->
        <property name="maxPoolSize" value="${jdbc_maxPoolSize}"/>
        <property name="minPoolSize" value="${jdbc_minPoolSize}"/>
        <!--关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>

        <!--获取连接超时时间-->
        <property name="checkoutTimeout" value="1000"/>
        <!--当获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>
    <!--约定大于配置-->
    <!--３.配置SqlSessionFactory对象-->
    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!--扫描sql配置文件:mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/**/*Mapper.xml"/>
        <!--配置mybatis全局配置文件:mybatis-config.xml,如果需要一些特殊配置就添加-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <!--扫描entity包,使用别名,多个用;隔开（在Mapper.xml中设置ResultType之后好像也可以将column与Entity中的属性对应起来）-->
        <!--<property name="typeAliasesPackage" value="cn.codingxiaxw.entity"/>-->
    </bean>

    <!--４:配置扫描Dao接口包,动态实现DAO接口,注入到spring容器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入SqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描的Dao接口-->
        <property name="basePackage" value="ss.upupoo.com.mapper"/>
    </bean>
</beans>